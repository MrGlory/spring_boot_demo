<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>

	<!-- 
	Spring Boot provides a number of “Starters” that make easy to add jars to your classpath.
	Our sample application has already used spring-boot-starter-parent in the parent section of the POM. 
	The spring-boot-starter-parent is a special starter that provides useful Maven defaults. 
	It also provides adependency-management section so that you can omit version tags for “blessed” dependencies.
	Other “Starters” simply provide dependencies that you are likely to need when developing a specific type of application. 
	Since we are developing a web application, we will add a spring-boot-starter-web dependency — but before that, 
	let’s look at what we currently have.
	
	Spring Boot 提供了一组可以容易将jar加到类路径下的“启动器”。我们的示例在POM的父节点部分使用了spring-boot-starter-parent。
	spring-boot-starter-parent 是一个特殊的启动器，它提供了有用的Maven默认值。它提供了adependency-management部分，
	所以你可以省略"blessed" dependencies版本标签。其他启动器只提供了在开发特定类型的应用程序时可能需要的依赖关系。
	由于我们正在开发一个Web应用程序，我们将添加一个spring-boot-starter-web依赖关系 - 但在此之前，
	让我们来看看我们现在有什么。
 	-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.0.BUILD-SNAPSHOT</version>
    </parent>
    

    <!-- Additional lines to be added here... -->
    <!-- 
    	Web应用依赖关系。
     -->
	<dependencies>
		<!-- tomcat-jdbc-pool依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		<!-- Spring boot Web程序依赖 -->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-web</artifactId>
	    </dependency>
	    <!-- MySQL数据库驱动 -->
	    <dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- Spring Boot中Mybatis依赖 -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.2.0</version>
		</dependency>
		<!-- MG -->
		<dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>1.3.3</version>
            <scope>test</scope>
        </dependency>
        <!-- Springboot 热部署 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
	</dependencies>
	
	<!-- 
    	To create an executable jar we need to add the spring-boot-maven-plugin to our pom.xml. 
    	Insert the following lines just below the dependencies section
    	为了创建可执行的jar，我盟需要将spring-boot-maven-plugin加到pom.xml文件中。插入到dependencies标签后一行的位置。
    	
    	ps:使用maven install后生成jar，使用java -jar *.jar启动Web工程
     -->
    <build>
	    <plugins>
	        <plugin>
	            <groupId>org.springframework.boot</groupId>
	            <artifactId>spring-boot-maven-plugin</artifactId>
	        </plugin>
	        <plugin>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-maven-plugin</artifactId>
                <version>1.3.3</version>
                <configuration>
                    <verbose>true</verbose>
                    <overwrite>true</overwrite>
                </configuration>
                <dependencies>
                    <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java
            配置这个依赖主要是为了等下在配置MG的时候可以不用配置classPathEntry这样的一个属性，避免
            代码的耦合度太高 -->
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.38</version>
                    </dependency>
                </dependencies>
            </plugin>
	    </plugins>
	</build>

    <!-- (you don't need this if you are using a .RELEASE version) -->
    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <url>http://repo.spring.io/snapshot</url>
            <snapshots><enabled>true</enabled></snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <url>http://repo.spring.io/milestone</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <url>http://repo.spring.io/snapshot</url>
        </pluginRepository>
        <pluginRepository>
            <id>spring-milestones</id>
            <url>http://repo.spring.io/milestone</url>
        </pluginRepository>
    </pluginRepositories>
</project>
